 # Parameter of PSM Validator
 #

 # input file[mgf generated by SpectraST]
 inputfile = ""

 # [psmfeature|trainfragmodel|fragscore|cometsearch]:
 # psmfeature. extract psm feature.
 # trainfragmodel. train model for fragmentation pattern.
 # fragscore. get fragmentation score alone.
 # cometsearch. cometsearch"
 task = trainfragmodel

 # export training and testing file for liblinear executables.
 use_output = false

 # minimal intensity fold change to select matched peak pairs as samples
 min_foldchange = 2

 # filename of pre-trained model
 model = ""

 # build model for different peptide length
 peptidelen = false

 # use fragment ion with zero intensity in pattern learning
 ghostpeak = false

 # redo all the steps and overwrite any file.
 overwrite = false

 # scoring method for combining scores of individual peaks in each MS2. [prob2|logprob|prob|weightedprob|counts]
 scoretype = counts

 # database for comet search
 database =

 # database for target only comet search
 targetdb =

 # database for decoy only comet search
 decoydb =

 # output name for comet search
 outname =

 # input spectra file
 specfile =

 # comet parameter file
 cometparam = /data/wulong/data/proteometools/comet.params.new

 # comet binary path
 cometbinary = /tools/bin/comet.2016012.linux.exe

 # how to find decoy file? decoy type [decoy|secondhit]. decoy --> *decoyfrag.txt secondhit --> *secondhitfrag.txt
 decoytype =  decoy

 # specify the comet search result if the annotation method is searchresult
 searchresult =

 # the ground truth of psm
 truthfile = /data/wulong/pool.pep.txt

 # use a list of peptide (pepset) or a list of scan-peptide pairs (scan+pep) as groundtruth
 truthmethod = pepset

 # annotation method of input mgf file
 annotation = searchresult

 # only work on user specified psm . turn on verbosity; only for psm feature
 debug = false

 # train Validator (true) or use existing model (false); Default: false.
 trainValidator = false

 # train Validator with probability estimation (true) or binary output (false); Default: true.
 validatorProb = false

 # the name of model used for calculate probability of each PSM.
 validatorModel = psmvalidatorRFmodel.foresst

 # the file name of validator model; used when trainValidator parameter is set as true; the file extension must be .forest
 writeValidatorModel = psmvalidatorRFmodel.forest

 # Number features for split, sqrt(total_feature)
 mtry = 3

 # number of trees/estimators in the forest
 ntree = 200

 # Number of threads to be used. Zero means using #(cpu)-1 threads
 thread = 0

 # more detail output about progress on screen
 verbose =

 # the config file
 # config = ...

 # print help information
 # help = false

